# modul/bot/main_bot/main.py (tozalangan versiya)

import asyncio
from aiogram import Router, Bot, Dispatcher, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from asgiref.sync import sync_to_async

from modul.config import settings_conf
from modul.loader import main_bot_router, client_bot_router
from modul.models import User
from modul.bot.main_bot.services.user_service import get_user_by_uid, create_user_directly
from modul.bot.main_bot.handlers.create_bot import create_bot_router
from modul.bot.main_bot.handlers.manage_bots import manage_bots_router

import requests
import logging

logger = logging.getLogger(__name__)

webhook_url = 'https://ismoilov299.uz/login/'


# def init_bot_handlers():
#     """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –±–æ—Ç–∞"""
#     try:
#         # –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –±–æ—Ç–∞
#         from modul.bot.main_bot.handlers import admin_panel
#
#         logger.info("‚úÖ Main bot handlers loaded successfully")
#         logger.info("‚úÖ Admin panel handlers loaded")
#
#     except ImportError as e:
#         logger.error(f"‚ùå Error importing main bot handlers: {e}")
#     except Exception as e:
#         logger.error(f"‚ùå Unexpected error in init_bot_handlers: {e}")
# Keyboard funksiyalari
async def main_menu():
    """Asosiy menyu klaviaturasi - yangilangan"""
    buttons = [
        [
            InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞ ‚öôÔ∏è", callback_data="create_bot"),
            InlineKeyboardButton(text="–ú–æ–∏ –±–æ—Ç—ã üñ•Ô∏è", callback_data="my_bots")
        ],
        [
            InlineKeyboardButton(text="–ò–Ω—Ñ–æ üìñ", callback_data="info"),
            InlineKeyboardButton(text="FAQ üí¨", callback_data="faq")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


async def registration_keyboard(registration_url):
    """Ro'yxatdan o'tish klaviaturasi"""
    buttons = [[InlineKeyboardButton(text="üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", url=registration_url)]]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def init_bot_handlers():
    @main_bot_router.message(CommandStart())
    async def cmd_start(message: Message, state: FSMContext):
        from modul.bot.main_bot.handlers import admin_panel

        logger.info("‚úÖ Main bot handlers loaded successfully")
        logger.info("‚úÖ Admin panel handlers loaded")

        """Start komandasi handleri"""
        logger.info(f"Start command from user {message.from_user.id}")
        user = message.from_user

        try:
            # Foydalanuvchi mavjudligini async tekshirish
            db_user = await get_user_by_uid(user.id)

            if db_user:
                # Ro'yxatdan o'tgan foydalanuvchi - asosiy menyuni ko'rsatish
                await message.answer(
                    f"üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!</b>\n\n"
                    f"ü§ñ <b>–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –±–æ—Ç–æ–≤</b> - —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ Telegram –±–æ—Ç–∞–º–∏!\n\n"
                    f"üîß <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
                    f"‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–æ–≤ –∑–∞ 2-3 –º–∏–Ω—É—Ç—ã\n"
                    f"‚Ä¢ 6 –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –±–æ—Ç–æ–≤\n"
                    f"‚Ä¢ –ü–æ–ª–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n"
                    f"‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞\n\n"
                    f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                    reply_markup=await main_menu(),
                    parse_mode="HTML"
                )
                logger.info(f"Main menu shown to existing user {user.id}")
            else:
                # Yangi foydalanuvchi - avtomatik ro'yxatdan o'tkazish
                new_user = await handle_auto_registration(message, user)
                if new_user:
                    await message.answer(
                        f"üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!</b>\n\n"
                        f"ü§ñ <b>–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –±–æ—Ç–æ–≤</b> - —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ Telegram –±–æ—Ç–∞–º–∏!\n\n"
                        # f"üéâ <b>–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!</b>\n\n"
                        f"üîß <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
                        f"‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–æ–≤ –∑–∞ 2-3 –º–∏–Ω—É—Ç—ã\n"
                        f"‚Ä¢ 6 –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –±–æ—Ç–æ–≤\n"
                        f"‚Ä¢ –ü–æ–ª–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n"
                        f"‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞\n\n"
                        f"üéØ <b>–î–æ—Å—Ç—É–ø–Ω–æ 6 –±–æ—Ç–æ–≤:</b>\n"
                        f"üí∏ –†–µ—Ñ–µ—Ä–∞–ª—ã ‚Ä¢ üé¨ –ö–∏–Ω–æ ‚Ä¢ üì• –ó–∞–≥—Ä—É–∑—á–∏–∫\n"
                        f"üí¨ ChatGPT ‚Ä¢ ‚ù§Ô∏è –ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ‚Ä¢ üë§ –ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç\n\n"
                        f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                        reply_markup=await main_menu(),
                        parse_mode="HTML"
                    )
                    logger.info(f"Main menu shown to new registered user {user.id}")
                else:
                    await message.answer(
                        "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.\n"
                        "/start",
                        parse_mode="HTML"
                    )

        except Exception as e:
            logger.error(f"Error in cmd_start for user {user.id}: {e}")
            await message.answer(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.\n"
                "/start",
                parse_mode="HTML"
            )

    async def handle_auto_registration(message: Message, user):
        """Yangi foydalanuvchini avtomatik ro'yxatdan o'tkazish"""
        try:
            telegram_id = user.id
            first_name = user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            last_name = user.last_name or ""
            username = user.username or ""

            # Foydalanuvchi rasmini olish
            photo_url = None
            try:
                user_photos = await message.bot.get_user_profile_photos(telegram_id)
                if user_photos.total_count > 0:
                    photo_id = user_photos.photos[0][-1].file_id
                    photo_file = await message.bot.get_file(photo_id)
                    photo_url = f"https://api.telegram.org/file/bot{message.bot.token}/{photo_file.file_path}"
            except Exception as e:
                logger.warning(f"Could not get user photo for {telegram_id}: {e}")

            # Foydalanuvchini to'g'ridan-to'g'ri bazaga qo'shish
            new_user = await create_user_directly(
                uid=telegram_id,
                username=username,
                first_name=first_name,
                last_name=last_name,
                profile_image_url=photo_url
            )

            if new_user:
                logger.info(f"User {telegram_id} auto-registered successfully")
                return new_user
            else:
                logger.error(f"Failed to auto-register user {telegram_id}")
                return None

        except Exception as e:
            logger.error(f"Error in auto registration for user {telegram_id}: {e}")
            return None

    @main_bot_router.callback_query(F.data == "back_to_main")
    async def back_to_main(callback: CallbackQuery, state: FSMContext):
        """Asosiy menyuga qaytish"""
        await state.clear()
        await callback.message.edit_text(
            f"üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=await main_menu(),
            parse_mode="HTML"
        )
        await callback.answer()

    @main_bot_router.callback_query(F.data == "info")
    async def show_info(callback: CallbackQuery):
        info_text = (
            f"üìñ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –±–æ—Ç–æ–≤</b>\n\n"
            f"ü§ñ <b>–ß—Ç–æ —ç—Ç–æ?</b>\n"
            f"–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –±–æ—Ç–æ–≤ - —ç—Ç–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Telegram –±–æ—Ç–∞–º–∏ –±–µ–∑ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.\n\n"
            f"‚ö° <b>–ë—ã—Å—Ç—Ä–æ –∏ –ø—Ä–æ—Å—Ç–æ:</b>\n"
            f"‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∑–∞ 2-3 –º–∏–Ω—É—Ç—ã\n"
            f"‚Ä¢ –ì–æ—Ç–æ–≤—ã–µ –±–æ—Ç —Ñ—É–Ω–∫—Ü–∏–π\n"
            f"‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞\n"
            f"‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"
            f"üéØ <b>6 –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –±–æ—Ç:</b>\n\n"
            f"üí∏ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞</b> - –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö\n"
            f"üé¨ <b>–ö–∏–Ω–æ –±–æ—Ç</b> - –ø–æ–∏—Å–∫ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–æ–≤\n"
            f"üì• <b>–ó–∞–≥—Ä—É–∑—á–∏–∫</b> - —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Å YouTube, Instagram, TikTok\n"
            f"üí¨ <b>ChatGPT</b> - –ò–ò –ø–æ–º–æ—â–Ω–∏–∫\n"
            f"‚ù§Ô∏è <b>–ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞</b> - —Å–∏—Å—Ç–µ–º–∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤ Leo Match\n"
            f"üë§ <b>–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç</b> - –∞–Ω–æ–Ω–∏–º–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ\n"
            
            f"üí° <b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n"
            f"‚Ä¢ –ë–µ–∑ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è\n"
            f"‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫\n"
            f"‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n"
            f"‚Ä¢ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
        )

        await callback.message.edit_text(
            info_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="ü§ñ –°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞", callback_data="create_bot")],
                [InlineKeyboardButton(text="üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url="https://t.me/Dark_Just")],
                [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
            ]),
            parse_mode="HTML"
        )
        await callback.answer()

    @main_bot_router.callback_query(F.data == "faq")
    async def show_faq(callback: CallbackQuery):
        """FAQ –±–æ'–ª–∏–º–∏"""
        faq_text = (
            f"üí¨ <b>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã (FAQ)</b>\n\n"
            f"‚ùì <b>–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞?</b>\n"
            f"1. –ù–∞–∂–º–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞ ‚öôÔ∏è'\n"
            f"2. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather\n"
            f"3. –í—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ –Ω–∞—à –±–æ—Ç\n"
            f"4. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –º–æ–¥—É–ª–∏\n"
            f"5. –ì–æ—Ç–æ–≤–æ! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç\n\n"
            f"üí∞ <b>–°–∫–æ–ª—å–∫–æ —ç—Ç–æ —Å—Ç–æ–∏—Ç?</b>\n"
            f"–°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ - –ë–ï–°–ü–õ–ê–¢–ù–û!\n"
            f"–ö–æ–º–∏—Å—Å–∏—è –±–µ—Ä–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –≤ –º–æ–¥—É–ª—è—Ö.\n\n"
            f"üîß <b>–ù—É–∂–Ω–æ –ª–∏ –∑–Ω–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ?</b>\n"
            f"–ù–ï–¢! –í—Å—ë —É–∂–µ –≥–æ—Ç–æ–≤–æ. –ü—Ä–æ—Å—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –º–æ–¥—É–ª–∏ –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç–µ.\n\n"
            f"‚öôÔ∏è <b>–ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –º–æ–¥—É–ª–∏ –ø–æ–∑–∂–µ?</b>\n"
            f"–î–ê! –í –ª—é–±–æ–µ –≤—Ä–µ–º—è –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –º–æ–¥—É–ª–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.\n\n"
            f"üìä <b>–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É?</b>\n"
            f"–í —Ä–∞–∑–¥–µ–ª–µ '–ú–æ–∏ –±–æ—Ç—ã üñ•Ô∏è' –≤—ã–±–µ—Ä–∏—Ç–µ –±–æ—Ç–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'.\n\n"
            f"üõ†Ô∏è <b>–ß—Ç–æ –µ—Å–ª–∏ –±–æ—Ç —Å–ª–æ–º–∞–µ—Ç—Å—è?</b>\n"
            f"–£ –Ω–∞—Å –µ—Å—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7. –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è!\n\n"
            f"üí∏ <b>–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞?</b>\n"
            f"–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –±–æ–Ω—É—Å. –†–∞–∑–º–µ—Ä –±–æ–Ω—É—Å–∞ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è.\n\n"
            f"üîí <b>–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –¥–∞–≤–∞—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞?</b>\n"
            f"–î–ê! –¢–æ–∫–µ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º. –ú—ã –ù–ï –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É.\n\n"
            f"‚è±Ô∏è <b>–ö–∞–∫ –±—ã—Å—Ç—Ä–æ –±–æ—Ç –Ω–∞—á–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å?</b>\n"
            f"–°—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è! –û–±—ã—á–Ω–æ 30-60 —Å–µ–∫—É–Ω–¥ –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫—É."
        )

        await callback.message.edit_text(
            faq_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", url="https://t.me/Dark_Just")],
                [InlineKeyboardButton(text="üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", url="https://ismoilov299.uz")],
                [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
            ]),
            parse_mode="HTML"
        )
        await callback.answer()

    # Placeholder handlers
    @main_bot_router.callback_query(F.data == "statistics")
    async def statistics_redirect(callback: CallbackQuery):
        """Statistika - my_bots orqali yo'naltirish"""
        await callback.answer("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ '–ú–æ–∏ –±–æ—Ç—ã'")
        # my_bots ga yo'naltirish
        from modul.bot.main_bot.handlers.manage_bots import show_my_bots
        await show_my_bots(callback)

    @main_bot_router.callback_query(F.data == "balance")
    async def balance_redirect(callback: CallbackQuery):
        """Balans - my_bots orqali yo'naltirish"""
        await callback.answer("üí∞ –ë–∞–ª–∞–Ω—Å –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ '–ú–æ–∏ –±–æ—Ç—ã'")
        # my_bots ga yo'naltirish
        from modul.bot.main_bot.handlers.manage_bots import show_my_bots
        await show_my_bots(callback)

    @main_bot_router.callback_query(F.data == "settings")
    async def settings_redirect(callback: CallbackQuery):
        """Sozlamalar - my_bots orqali yo'naltirish"""
        await callback.answer("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–æ–≤ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ '–ú–æ–∏ –±–æ—Ç—ã'")
        # my_bots ga yo'naltirish
        from modul.bot.main_bot.handlers.manage_bots import show_my_bots
        await show_my_bots(callback)

    @main_bot_router.callback_query(F.data == "help")
    async def help_redirect(callback: CallbackQuery):
        """Yordam - FAQ ga yo'naltirish"""
        await show_faq(callback)

    # Include sub-routers
    main_bot_router.include_router(create_bot_router)
    main_bot_router.include_router(manage_bots_router)

    logger.info("Main bot handlers initialized successfully!")


# Test uchun alohida funksiya
async def test_db_connection():
    """Ma'lumotlar bazasi ulanishini tekshirish"""
    try:
        user = await get_user_by_uid(1)  # Test UID
        logger.info(f"DB test successful. User: {user}")
        return True
    except Exception as e:
        logger.error(f"DB test failed: {e}")
        return False


# Agar to'g'ridan-to'g'ri ishga tushirilsa
if __name__ == "__main__":
    async def main():
        await test_db_connection()
        logger.info("Main bot handlers ready!")


    asyncio.run(main())