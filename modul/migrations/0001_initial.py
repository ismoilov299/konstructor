# Generated by Django 5.0.7 on 2024-09-16 17:01

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=4.0)),
                ('min_amount', models.FloatField(default=60.0)),
                ('admin_channel', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='AnonClientModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('ANY', 'Any')], max_length=50)),
                ('status', models.IntegerField(default=0)),
                ('vip_date_end', models.DateTimeField(null=True)),
                ('job_id', models.CharField(max_length=255, null=True)),
                ('bot_username', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Answer_statistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('reg_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Channels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_url', models.CharField(max_length=255, unique=True)),
                ('channel_id', models.BigIntegerField(unique=True)),
                ('admins_channel', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ChannelSponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chanel_id', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Checker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tg_id', models.IntegerField(unique=True)),
                ('inv_id', models.IntegerField()),
                ('add', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DownloadAnalyticsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bot_username', models.CharField(max_length=100)),
                ('domain', models.CharField(max_length=1024)),
                ('count', models.IntegerField(default=0)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='LeoMatchModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.CharField(max_length=1024)),
                ('media_type', models.CharField(choices=[('PHOTO', 'Photo'), ('VIDEO', 'Video'), ('VIDEO_NOTE', 'Video Note')], max_length=50)),
                ('sex', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('ANY', 'Any')], max_length=50)),
                ('age', models.IntegerField()),
                ('full_name', models.CharField(max_length=15)),
                ('about_me', models.CharField(max_length=300)),
                ('city', models.CharField(max_length=50)),
                ('which_search', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('ANY', 'Any')], max_length=50)),
                ('search', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('bot_username', models.CharField(max_length=100)),
                ('count_likes', models.IntegerField(default=0)),
                ('blocked', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Link_statistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('reg_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_id', models.IntegerField()),
                ('receiver_id', models.IntegerField()),
                ('sender_message_id', models.IntegerField()),
                ('receiver_message_id', models.IntegerField()),
                ('reg_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rating_overall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('amount', models.IntegerField()),
                ('reg_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rating_today',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('amount', models.IntegerField()),
                ('reg_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uid', models.BigIntegerField(default=4755710669, null=True, unique=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_image', models.FileField(blank=True, null=True, upload_to='images')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='AnonChatModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anon_chat_partner', to='modul.anonclientmodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anon_chat_user', to='modul.anonclientmodel')),
            ],
        ),
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('bot_enable', models.BooleanField(default=True)),
                ('username', models.CharField(max_length=255)),
                ('unauthorized', models.BooleanField(default=False)),
                ('photo', models.CharField(blank=True, max_length=255, null=True)),
                ('photo_is_gif', models.BooleanField(default=False)),
                ('news_channel', models.CharField(blank=True, max_length=255, null=True)),
                ('support', models.CharField(blank=True, max_length=32, null=True)),
                ('mandatory_subscription', models.BooleanField(default=False)),
                ('enable_promotion', models.BooleanField(default=False)),
                ('enable_child_bot', models.BooleanField(default=False)),
                ('enable_music', models.BooleanField(default=False)),
                ('enable_download', models.BooleanField(default=False)),
                ('enable_leo', models.BooleanField(default=False)),
                ('enable_chatgpt', models.BooleanField(default=False)),
                ('enable_horoscope', models.BooleanField(default=False)),
                ('enable_anon', models.BooleanField(default=False)),
                ('enable_sms', models.BooleanField(default=False)),
                ('enable_refs', models.BooleanField(default=False)),
                ('enable_kino', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bots', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_bots', to='modul.bot')),
            ],
        ),
        migrations.CreateModel(
            name='LeoMatchLikesBasketModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=1024, null=True)),
                ('done', models.BooleanField(default=False)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leo_match_from_user', to='modul.leomatchmodel')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leo_match_to_user', to='modul.leomatchmodel')),
            ],
        ),
        migrations.CreateModel(
            name='UserTG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.BigIntegerField(unique=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('balance', models.FloatField(default=0)),
                ('paid', models.FloatField(default=0)),
                ('refs', models.IntegerField(default=0)),
                ('invited', models.CharField(default='Никто', max_length=255)),
                ('invited_id', models.IntegerField(default=None, null=True)),
                ('banned', models.BooleanField(default=False)),
                ('last_interaction', models.DateTimeField(blank=True, default=datetime.datetime(2024, 9, 16, 17, 1, 7, 982342, tzinfo=datetime.timezone.utc), null=True)),
                ('interaction_count', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_link', models.CharField(max_length=2056, null=True, unique=True)),
                ('greeting', models.CharField(default='Добро пожаловать!', max_length=255, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tg_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(choices=[('DOWNLOAD_MEDIA', 'Download Media')], max_length=50)),
                ('data', models.JSONField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modul.usertg')),
            ],
        ),
        migrations.CreateModel(
            name='SMSOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.BigIntegerField(unique=True)),
                ('country_code', models.CharField(default='', max_length=20)),
                ('product', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('receive_code', models.CharField(default='', max_length=255)),
                ('receive_status', models.CharField(default='wait', max_length=10)),
                ('price', models.FloatField()),
                ('order_created_at', models.DateTimeField(auto_now=True)),
                ('profit', models.FloatField(default=0)),
                ('bot_admin_profit', models.FloatField(default=0)),
                ('msg_id', models.BigIntegerField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modul.usertg')),
            ],
        ),
        migrations.CreateModel(
            name='SMSBanModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modul.usertg')),
            ],
        ),
        migrations.AddField(
            model_name='leomatchmodel',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modul.usertg'),
        ),
        migrations.CreateModel(
            name='GPTRecordModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=1024)),
                ('type', models.CharField(choices=[('REQUEST', 'Request'), ('PICTURE', 'Picture'), ('TEXT_TO_SPEECH', 'Text to Speech'), ('SPEECH_TO_TEXT', 'Speech to Text'), ('ASSISTANT', 'Assistant')], max_length=50)),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bot_user', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modul.usertg')),
            ],
        ),
        migrations.CreateModel(
            name='ClientBotUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.BigIntegerField()),
                ('balance', models.FloatField(default=0)),
                ('referral_count', models.IntegerField(default=0)),
                ('referral_balance', models.FloatField(default=0)),
                ('inviter_got_bonus', models.BooleanField(default=False)),
                ('subscribed_all_chats', models.BooleanField(default=False)),
                ('subscribed_chats_at', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0, tzinfo=datetime.timezone.utc))),
                ('current_ai_limit', models.IntegerField(default=12)),
                ('enable_horoscope_everyday_alert', models.BooleanField(default=False)),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='modul.bot')),
                ('inviter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to='modul.clientbotuser')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_bot_users', to='modul.usertg')),
            ],
        ),
        migrations.AddField(
            model_name='anonclientmodel',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modul.usertg'),
        ),
        migrations.CreateModel(
            name='Withdrawals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('card', models.CharField(max_length=255)),
                ('bank', models.CharField(max_length=255)),
                ('status', models.CharField(default='ожидание', max_length=255)),
                ('reg_date', models.DateTimeField()),
                ('tg_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modul.usertg', to_field='uid')),
            ],
        ),
    ]
