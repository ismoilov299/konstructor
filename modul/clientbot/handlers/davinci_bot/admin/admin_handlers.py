import logging
from aiogram import Router, F, Bot
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from modul.clientbot import shortcuts
from modul.clientbot.handlers.davinci_bot.admin.admin_filters import AdminFilter
from modul.clientbot.handlers.davinci_bot.admin.admin_states import AdminDavinciStates
from modul.clientbot.handlers.davinci_bot.services.davinci_service import get_or_create_davinci_profile
from modul.clientbot.handlers.davinci_bot.admin.admin_service import (
    get_pending_profiles, approve_profile, reject_profile,
    get_davinci_stats, add_stop_word, remove_stop_word
)

logger = logging.getLogger(__name__)

admin_davinci_router = Router()


@admin_davinci_router.message(F.text == "/davinci_admin", AdminFilter())
async def davinci_admin_menu(message: Message):
    """Davinci admin menu"""
    buttons = [
        [InlineKeyboardButton(text="üìã –ú–æ–¥–µ—Ä–∞—Ü–∏—è –∞–Ω–∫–µ—Ç", callback_data="moderate_profiles")],
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="davinci_stats")],
        [InlineKeyboardButton(text="üö´ –°—Ç–æ–ø-—Å–ª–æ–≤–∞", callback_data="stop_words")],
        [InlineKeyboardButton(text="üë• –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="find_user")],
        [InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="cancel")]
    ]

    await message.answer(
        "üîß –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å Davinci –∑–Ω–∞–∫–æ–º—Å—Ç–≤:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=buttons)
    )


@admin_davinci_router.callback_query(F.data == "moderate_profiles", AdminFilter())
async def show_pending_profiles(callback: CallbackQuery, bot: Bot):
    """Show profiles pending moderation"""
    bot_db = await shortcuts.get_bot(bot)
    pending_profiles = await get_pending_profiles(bot_db.username)

    if not pending_profiles:
        await callback.message.edit_text(
            "‚úÖ –ù–µ—Ç –∞–Ω–∫–µ—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_admin")]
            ])
        )
        return

    profile = pending_profiles[0]

    profile_text = (
        f"üë§ –ê–Ω–∫–µ—Ç–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:\n\n"
        f"üìù –ò–º—è: {profile.full_name}\n"
        f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {profile.age}\n"
        f"üë• –ü–æ–ª: {profile.sex}\n"
        f"üèôÔ∏è –ì–æ—Ä–æ–¥: {profile.city}\n"
        f"üîç –ò—â–µ—Ç: {profile.which_search}\n"
        f"üí≠ –û —Å–µ–±–µ: {profile.about_me}\n\n"
        f"üÜî ID: {profile.id}\n"
        f"üìÖ –°–æ–∑–¥–∞–Ω–∞: {profile.created_at.strftime('%d.%m.%Y %H:%M')}"
    )

    buttons = [
        [
            InlineKeyboardButton(text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve_{profile.id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{profile.id}")
        ],
        [InlineKeyboardButton(text="‚è≠Ô∏è –°–ª–µ–¥—É—é—â–∞—è", callback_data="next_profile")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_admin")]
    ]

    if profile.photo:
        await callback.message.edit_media(
            media=callback.message.photo[0] if callback.message.photo else None,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=buttons)
        )
        await callback.message.edit_caption(
            caption=profile_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=buttons)
        )
    else:
        await callback.message.edit_text(
            profile_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=buttons)
        )


@admin_davinci_router.callback_query(F.data.startswith("approve_"), AdminFilter())
async def approve_profile_handler(callback: CallbackQuery, bot: Bot):
    """Approve profile"""
    profile_id = int(callback.data.split("_")[1])
    bot_db = await shortcuts.get_bot(bot)

    success = await approve_profile(profile_id, bot_db.username)

    if success:
        await callback.answer("‚úÖ –ê–Ω–∫–µ—Ç–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!")
        # Show next profile or go back
        await show_pending_profiles(callback, bot)
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏", show_alert=True)


@admin_davinci_router.callback_query(F.data.startswith("reject_"), AdminFilter())
async def reject_profile_handler(callback: CallbackQuery, bot: Bot):
    """Reject profile"""
    profile_id = int(callback.data.split("_")[1])
    bot_db = await shortcuts.get_bot(bot)

    success = await reject_profile(profile_id, bot_db.username)

    if success:
        await callback.answer("‚ùå –ê–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!")
        # Show next profile or go back
        await show_pending_profiles(callback, bot)
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏", show_alert=True)


@admin_davinci_router.callback_query(F.data == "davinci_stats", AdminFilter())
async def show_davinci_stats(callback: CallbackQuery, bot: Bot):
    """Show davinci statistics"""
    bot_db = await shortcuts.get_bot(bot)
    stats = await get_davinci_stats(bot_db.username)

    stats_text = (
        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Davinci –∑–Ω–∞–∫–æ–º—Å—Ç–≤:\n\n"
        f"üë• –í—Å–µ–≥–æ –∞–Ω–∫–µ—Ç: {stats.get('total_profiles', 0)}\n"
        f"‚úÖ –û–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö: {stats.get('approved_profiles', 0)}\n"
        f"‚è≥ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏: {stats.get('pending_profiles', 0)}\n"
        f"üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats.get('blocked_profiles', 0)}\n"
        f"üîç –ê–∫—Ç–∏–≤–Ω–æ –∏—â—É—Ç: {stats.get('active_searchers', 0)}\n\n"
        f"‚ù§Ô∏è –í—Å–µ–≥–æ –ª–∞–π–∫–æ–≤: {stats.get('total_likes', 0)}\n"
        f"üíñ –í–∑–∞–∏–º–Ω—ã—Ö –ª–∞–π–∫–æ–≤: {stats.get('mutual_likes', 0)}\n"
        f"üë® –ú—É–∂—á–∏–Ω: {stats.get('male_profiles', 0)}\n"
        f"üë© –ñ–µ–Ω—â–∏–Ω: {stats.get('female_profiles', 0)}"
    )

    await callback.message.edit_text(
        stats_text,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="davinci_stats")],
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_admin")]
        ])
    )