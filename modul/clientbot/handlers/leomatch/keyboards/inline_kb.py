from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from modul.clientbot.handlers.leomatch.data.callback_datas import LeomatchLikeAction, LeomatchProfileAction, \
    LeomatchProfileAlert, LeomatchProfileBlock, LikeActionEnum, ProfileActionEnum
from aiogram.utils.i18n import gettext as _


def profile_view_action(user_id: int):
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üëç", callback_data=LeomatchProfileAction(action=ProfileActionEnum.LIKE,
                                                                           user_id=user_id).pack()),
        InlineKeyboardButton(text="üíå", callback_data=LeomatchProfileAction(action=ProfileActionEnum.MESSAGE,
                                                                           user_id=user_id).pack()),
        InlineKeyboardButton(text="‚ö†Ô∏è",
                             callback_data=LeomatchLikeAction(action=ProfileActionEnum.REPORT, user_id=user_id).pack()),
        # InlineKeyboardButton(text="üí§", callback_data=LeomatchProfileAction(action=ProfileActionEnum.SLEEP).pack()),
        InlineKeyboardButton(text="üëé", callback_data=LeomatchProfileAction(action=ProfileActionEnum.DISLIKE).pack()),
        width=4
    )
    return builder.as_markup()


def profile_like_action(user_id: int):
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="‚ù§Ô∏è",
                             callback_data=LeomatchLikeAction(action=LikeActionEnum.LIKE, user_id=user_id).pack()),
        InlineKeyboardButton(text="üëé",
                             callback_data=LeomatchLikeAction(action=LikeActionEnum.DISLIKE, user_id=user_id).pack()),
        # InlineKeyboardButton(text="‚ö†Ô∏è", callback_data=LeomatchLikeAction(action=LikeActionEnum.REPORT, user_id=user_id).pack()),
        width=4
    )
    return builder.as_markup()


def profile_alert(sender_id: int, account_id: int):
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text=_("–î–∞"), callback_data=LeomatchProfileAlert(action="yes", sender_id=sender_id,
                                                                              account_id=account_id).pack()),
        InlineKeyboardButton(text=_("–ù–µ—Ç"), callback_data=LeomatchProfileAlert(action="no").pack()),
        width=2
    )
    return builder.as_markup()


def profile_alert_action(sender_id: int, account_id: int):
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text=_("–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å"), callback_data=LeomatchProfileBlock(account_id=account_id).pack()),
        InlineKeyboardButton(text=_("–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è"),
                             callback_data=LeomatchProfileBlock(account_id=sender_id).pack()),
        InlineKeyboardButton(text=_("–û—Ç–º–µ–Ω–∏—Ç—å"), callback_data=LeomatchProfileBlock().pack()),
        width=2
    )
    return builder.as_markup()


def write_profile(username_or_uid: str or int, is_username: bool = False):
    builder = InlineKeyboardBuilder()
    link = f"https://t.me/{username_or_uid}" if is_username else f"tg://user?id={username_or_uid}"
    builder.row(
        InlineKeyboardButton(text=_("–ù–∞–ø–∏—Å–∞—Ç—å"), url=link),
        width=4
    )
    return builder.as_markup()
