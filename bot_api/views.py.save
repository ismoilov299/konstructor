@sync_to_async
def get_user(uid: int, username: str, first_name: str = None, last_name: str = None):
    user = models.UserTG.objects.get_or_create(uid=uid, username=username, first_name=first_name, last_name=last_name)
    return user


@sync_to_async
@transaction.atomic
async def save_user(u, bot: Bot, inviter=None):
    bot = await sync_to_async(models.Bot.objects.select_related("owner").filter(token=bot.token).first)()
    user = await sync_to_async(models.UserTG.objects.filter(uid=u.id).first)()
    current_ai_limit = 12
    if not user:
        user = await sync_to_async(models.UserTG.objects.create)(
            uid=u.id,
            username=u.username,
            first_name=u.first_name,
            last_name=u.last_name,
        )
    else:
        current_ai_limit = 0

    client_user = await sync_to_async(models.ClientBotUser.objects.filter(uid=u.id, bot=bot).first)()
    if client_user:
        return client_user

    client_user = await sync_to_async(models.ClientBotUser.objects.create)(
        uid=u.id,
        user=user,
        bot=bot,
        inviter=inviter,
        current_ai_limit=current_ai_limit
    )
    return client_user


async def start(message: Message, state: FSMContext, bot: Bot, command: BotCommand):
    bot_db = await shortcuts.get_bot(bot)
    uid = message.from_user.id
    text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {hello}".format(hello=html.quote(message.from_user.full_name))
    kwargs = {}

    if shortcuts.have_one_module(bot_db, "download"):
        text = ("ü§ñ –ü—Ä–∏–≤–µ—Ç, {full_name}! –Ø –±–æ—Ç-–∑–∞–≥—Ä—É–∑—á–∏–∫.\r\n\r\n"
                "–Ø –º–æ–≥—É —Å–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ/–∞—É–¥–∏–æ/—Ñ–∞–π–ª—ã/–∞—Ä—Ö–∏–≤—ã —Å *Youtube, Instagram, TikTok, Facebook, SoundCloud, Vimeo, –í–∫–æ–Ω—Ç–∞–∫—Ç–µ, Twitter –∏ 1000+ –∞—É–¥–∏–æ/–≤–∏–¥–µ–æ/—Ñ–∞–π–ª–æ–≤—ã—Ö —Ö–æ—Å—Ç–∏–Ω–≥–æ–≤*. –ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ –º–Ω–µ URL –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é —Å –º–µ–¥–∏–∞ –∏–ª–∏ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª.").format(
            full_name=message.from_user.full_name)
        await state.set_state(Download.download)
        kwargs['parse_mode'] = "Markdown"
        kwargs['reply_markup'] = await reply_kb.refs_kb()
    elif shortcuts.have_one_module(bot_db, "refs"):
        await start_ref(message)
    elif shortcuts.have_one_module(bot_db, "kino"):
        await start_kino_bot(message, state, bot)
    elif shortcuts.have_one_module(bot_db, "anon"):
        await start_anon_bot(message, state, command)

    # elif shortcuts.have_one_module(bot_db, "anon"):
    #     # text = cabinet_text()
    #     kwargs['reply_markup'] = await reply_kb.main_menu(uid)
    else:
        kwargs['reply_markup'] = await reply_kb.main_menu(uid, bot)
    await message.answer(text, **kwargs)


# print(client_bot_router.message.handlers)
client_bot_router.message.register(bot_start, F.text == "ü´∞ –ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞")
client_bot_router.message.register(bot_start_lets_leo, F.text == "–î–∞–≤–∞–π, –Ω–∞—á–Ω–µ–º!", LeomatchRegistration.BEGIN)


def start_all_bot_handlers():
    @client_bot_router.message(CommandStart())
    async def start_on(message: Message, state: FSMContext, bot: Bot, command: CommandObject, bot_command: BotCommand):
        bot_db = await shortcuts.get_bot(bot)

        info = await get_user(uid=message.from_user.id, username=message.from_user.username,
                              first_name=message.from_user.first_name if message.from_user.first_name else None,
                              last_name=message.from_user.last_name if message.from_user.last_name else None)
        await state.clear()
        commands = await bot.get_my_commands()
        bot_commands = [
            BotCommand(command="/start", description="–ú–µ–Ω—é"),
        ]
        print('command start')
        if commands != bot_commands:
            await bot.set_my_commands(bot_commands)
        referral = command.args
        uid = message.from_user.id
        user = await shortcuts.get_user(uid, bot)

        if not user:
            if referral and referral.isdigit():
                inviter = await shortcuts.get_user(int(referral))
                if inviter:
                    await shortcuts.increase_referral(inviter)
                    with suppress(TelegramForbiddenError):
                        user_link = html.link('—Ä–µ—Ñ–µ—Ä–∞–ª', f'tg://user?id={uid}')
                        await bot.send_message(
                            chat_id=referral,
                            text=('new_referral').format(
                                user_link=user_link,
                            )
                        )
            else:
                inviter = None
            await save_user(u=message.from_user, inviter=inviter, bot=bot)
        await start(message, state, bot, bot_command)
        return