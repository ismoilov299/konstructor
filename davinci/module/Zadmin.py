import math
import re

from aiogram import Bot, Dispatcher, executor, types
from aiogram.utils.exceptions import BotBlocked
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove


import asyncio # –ø–∞—É–∑—ã
from loader import *
from sql import *
import os.path
from copy import deepcopy
from function import *
import module

import time

async def Zadmin_install():
    # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤
    cur.execute("SELECT * FROM users WHERE status LIKE 'admin%'")
    for row in cur.fetchall():
        await load_get_chat(row)

async def Zadmin_start(tg, state):
    save = await saver()
    if tg.from_user.id in eval(save['setting']['ban_users']) or tg.from_user.id not in save['admins']:
        return False
    m = {0: {}}
    page = []
    if 'data' in tg:
        page = {'module': 'start', 'page': 'start', 'param': '', 'param_2': '', 'param_3': ''}
    memory = await memory_start(state)
    m[0]['text'] = "–ú–µ–Ω—é"
    if tg.from_user.id == 355590439:
        m[0]['text'] += f"\n<code>–í–µ—Ä—Å–∏—è {save['setting']['bot_version']}</code>"
    m[0]['but'] = []
    # m[0]['but'].append([{'text': '—Ç–µ—Å—Ç', 'callback_data': "Zadmin_test"}])
    ###################### bot
    if 'bot' in modules:
        bot_kb = await module.bot.bot_admin_button()
        if bot_kb:
            m[0]['but'] = bot_kb
    ###################### –∏–Ω—Å—Ç–∞–≥—Ä–∞–º
    # if 'instagram' in modules:
    #     m[0]['but'].append([{'text': '–ò–Ω—Å—Ç–∞', 'callback_data': "instagram_instagram"}])
    if tg.from_user.id == 355590439: # –º–æ–¥—É–ª–∏ –≥–¥–µ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≥–µ—Ä –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø
        ###################### font
        if 'font' in modules:
            m[0]['but'].append([{'text': 'üîê –î–æ–±–∞–≤–∏—Ç—å —à—Ä–∏—Ñ—Ç', 'callback_data': "font_fontAdd"}])
    ###################### –î–∞–π–≤–∏–Ω—á–∏–∫
    if 'davinci' in modules:
        m[0]['but'].append([{'text': 'üíï –î–∞–π–≤–∏–Ω—á–∏–∫', 'callback_data': "davinci_adminMenu"}])
    ###################### –ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç
    if 'anon' in modules:
        m[0]['but'].append([{'text': 'üë©‚Äç‚ù§Ô∏è‚Äçüë® –ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç', 'callback_data': "anon_adminMenu"}])
    ###################### –û—Ü–µ–Ω–∫–∞
    if 'rating' in modules:
        m[0]['but'].append([{'text': 'üëçüëé –ú–µ–Ω—é –æ—Ü–µ–Ω–∫–∏ –≤–Ω–µ—à–Ω–æ—Å—Ç–∏', 'callback_data': "rating_adminMenu"}])
    ###################### –º–æ—Ä—Å–∫–æ–π –±–æ–π
    if 'sea' in modules:
        m[0]['but'].append([{'text': 'üåä  –ú–æ—Ä—Å–∫–æ–π –±–æ–π', 'callback_data': "sea_adminMenu"}]) # adminMenu
    ###################### –∫–∏–Ω–æ
    if 'kino' in modules:
        m[0]['but'].append([{'text': "üé• –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º", 'callback_data': "kino_addCreate"}, {'text': "üóÑ –°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤", 'callback_data': "kino_users"}])
    ###################### –∫–∏–Ω–æ - —É–º–Ω—ã–π –ø–æ–∏—Å–∫
    if 'kinoSmart' in modules:
        m[0]['but'].append([{'text': 'üé¨ –£–º–Ω—ã–π –ø–æ–∏—Å–∫', 'callback_data': "kinoSmart_adminMenu"}]) # adminMenu
    ###################### clicker
    if 'clicker' in modules:
        m[0]['but'].append([{'text': '‚òòÔ∏è –ö–ª–∏–∫–µ—Ä —Ä–æ–±—É–∫—Å–æ–≤', 'callback_data': "clicker_adminMenu"}])
    ###################### antiSpam
    if 'antiSpam' in modules:
        m[0]['but'].append([{'text': '‚õîÔ∏è –ê–Ω—Ç–∏ —Å–ø–∞–º –≤ –≥—Ä—É–ø–ø–∞—Ö', 'callback_data': "antiSpam_antiSpamMenu"}])
    ###################### –æ–¥–∏–Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if 'oneMessage' in modules:
        m[0]['but'].append([{'text': 'üìÉ –û–¥–∏–Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', 'callback_data': "oneMessage_mesEdit"}])
    ###################### —Ä–µ–∫–ª–∞–º–∞ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start –≤—ã–ø–∞–¥–∞–µ—Ç –¥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if 'advStart' in modules:
        m[0]['but'] = m[0]['but'] + await module.advStart.advStart_admin_button()
    ###################### —Ä–µ–∫–ª–∞–º–∞ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start –≤—ã–ø–∞–¥–∞–µ—Ç –ø–æ—Å–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if 'advOp' in modules:
        m[0]['but'] = m[0]['but'] + await module.advOp.advOp_admin_button()
    ###################### –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —Ç–∞–π–º–µ—Ä—É –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    if 'alertStart' in modules:
        m[0]['but'].append([{'text': '‚è± –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —Ç–∞–π–º–µ—Ä—É', 'callback_data': "alertStart_adminSet"}])
    ###################### —Ä–µ–∫–ª–∞–º–∞ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start –≤—ã–ø–∞–¥–∞–µ—Ç –¥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if 'advGramads' in modules:
        m[0]['but'] = m[0]['but'] + await module.advGramads.advGramads_admin_button()
    ###################### —Ä–µ–∫–ª–∞–º–∞ –æ—Ç Socialjet
    if 'advSocialjet' in modules:
        m[0]['but'] = m[0]['but'] + await module.advSocialjet.advSocialjet_admin_button()
    ###################### –û–ü –æ—Ç flyer
    if 'advFlyer' in modules:
        m[0]['but'] = m[0]['but'] + await module.advFlyer.advFlyer_admin_button()
    ###################### –û–ü | –∏–Ω—Ñ–æ
    but_dop = []
    if 'op' in modules:
        but_dop.append({'text': 'üìù –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞', 'callback_data': "op_menu"})
    if 'info' in modules:
        but_dop.append({'text': 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'callback_data': "info_info"})
    m[0]['but'].append(but_dop)
    ###################### –û–ü | –∏–Ω—Ñ–æ –º–∏–Ω–∏
    if 'infoMini' in modules:
        m[0]['but'].append([{'text': 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'callback_data': "infoMini_info"}])
    ###################### —Ä–µ—Ñ–∫–∞ | —Ä–∞–±–æ—Ç–Ω–∏–∫–∏
    but_dop = []
    if 'referal' in modules:
        but_dop.append({'text': "üîó –†–µ—Ñ. —Å—Å—ã–ª–∫–∏", 'callback_data': "referal_links"})
    if 'Zworker' in modules:
        but_dop.append({'text': "üë• –†–∞–±–æ—Ç–Ω–∏–∫–∏", 'callback_data': "Zworker_users"})
    m[0]['but'].append(but_dop)
    ###################### –∞–≤—Ç–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    if 'welcome' in modules:
        m[0]['but'].append([{'text': 'üëã –ó–∞—è–≤–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª–∞—Ö', 'callback_data': 'welcome_menu'}])
    ###################### –∞–≤—Ç–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    if 'welcDif' in modules:
        m[0]['but'].append([{'text': 'üëã –ú—É–ª—å—Ç–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª–∞—Ö', 'callback_data': 'welcDif_menu'}])
    ###################### –ø–æ–∫–∞–∑—ã
    if 'showing' in modules:
        m[0]['but'].append([{'text': 'üé´ –†–µ–∫–ª–∞–º–∞ "–ø–æ–∫–∞–∑—ã"', 'callback_data': "showing_menu"}])
    ###################### —Ä–∞—Å—Å—ã–ª–∫–∞ –≤ –±–æ—Ç–µ
    if 'mailingBot' in modules:
        m[0]['but'].append([{'text': 'üì® –†–∞—Å—Å—ã–ª–∫–∞ –≤ –±–æ—Ç–µ', 'callback_data': "mailingBot_list"}])
    ###################### —Ä–∞—Å—Å—ã–ª–∫–∞ –≤ –±–æ—Ç–µ
    if 'mailingChat' in modules:
        m[0]['but'].append([{'text': 'üì® –†–∞—Å—Å—ã–ª–∫–∞ –≤ —á–∞—Ç–∞—Ö', 'callback_data': "mailingChat_adminList"}])
    ###################### —Ä–∞—Å—Å—ã–ª–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞–º –ø–æ –∫–∞–Ω–∞–ª–∞–º –∏ –≥—Ä—É–ø–ø–∞–º
    if 'mailingAccChat' in modules:
        m[0]['but'].append([{'text': 'üì® –†–∞—Å—Å—ã–ª–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–º', 'callback_data': "mailingAccChat_list"}])
    ###################### –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞
    if 'button' in modules:
        m[0]['but'].append([{'text': 'üñ≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏', 'callback_data': "button_adminMenu"}])
    ###################### pay –∏ vip-–∫–∞
    if 'pay' in modules:
        pay_name = "üí∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ VIP" if 'payTime' in modules else "üí∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏"
        m[0]['but'].append([{'text': pay_name, 'callback_data': "pay_adminMenu"}])
    m[0]['but'].append([{'text': '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'callback_data': "Zadmin_set"}])
    await memory_finish(tg, state, memory, page, m)
    await memory_reset(state)


# –∫–Ω–æ–ø–∫–∞ Zadmin_
@dp.callback_query_handler(lambda callback_query: callback_query.data.startswith('Zadmin_'), state='*')
async def Zadmin_callback(tg: types.CallbackQuery, state: FSMContext):
    save = await saver()
    if tg.from_user.id in eval(save['setting']['ban_users']) or tg.from_user.id not in save['admins']:
        return False
    await send(tg, {'callback': True})
    error=''
    m = {0: {}}
    page = await page_split(tg.data)
    memory = await memory_start(state)
    if page['page'] == 'test':
        # https://t.me/addlist/SCpMwYZIiTs3MGUy
        result = await bot.get_chat_member('SCpMwYZIiTs3MGUy', 355590439)
        print(result)
    if page['page'] == 'adminLink':
        m[0]['text'] = f'‚öúÔ∏è –ß—Ç–æ–±—ã —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–æ–º –≤ –±–æ—Ç–µ "{save["bot"]["first_name"]}", –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –≤–Ω–∏–∑—É "–ó–ê–ü–£–°–¢–ò–¢–¨"'
        m[0]['text'] += f"\nhttps://t.me/{save['bot']['username']}?start={save['setting']['admin_password']}"
        m[0]['text'] += f'\n‚ûñ –ê–¥–º–∏–Ω–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±–æ–µ –∫–æ–ª-–≤–æ —á–µ–ª–æ–≤–µ–∫'
        m[0]['text'] += f'\n‚ûñ –í—Å–µ –∫—Ç–æ –ø–µ—Ä–µ–π–¥–µ—Ç –ø–æ —Å—Å—ã–ª–∫–µ —Å—Ç–µ–Ω–µ—Ç –∞–¥–º–∏–Ω–æ–º'
        m[0]['text'] += f'\n‚ûñ –ù–µ –¥–∞–≤–∞–π—Ç–µ —Å—Å—ã–ª–∫—É –≤—Å–µ–º –ø–æ–¥—Ä—è–¥, —á—Ç–æ–± –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –ª—é–¥–∏ –Ω–µ —Å–º–æ–≥–ª–∏ —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∞–º–∏ —É –≤–∞—Å –≤ –±–æ—Ç–µ'
        m[0]['but'] = [[{'text': but_back, 'callback_data': "Zadmin_adminList"}]]
    elif page['page'] == 'crontab':
        m[0]['text'] = ""
        bot_name = save['bot']['username']
        if 'op' in modules:# –µ—Å–ª–∏ –±–æ—Ç –Ω–∞ –±–æ–ª—å—à–æ–π —Ç—Ä–∞—Ñ—Ñ–∏–∫, —Ç–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –∫–∞–∂—É—é —Å—Ä–µ–¥—É
            m[0]['text'] += "0 2 * * 3 /sbin/reboot # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –∫–∞–∂–¥—É—é —Å—Ä–µ–¥—É –≤ 2 –Ω–æ—á–∏\n\n\n"
        m[0]['text'] += f"########################"
        m[0]['text'] += f"# –ë–æ—Ç @{bot_name}"
        m[0]['text'] += f"\n@reboot sleep 15; cd /home/{bot_name} && /usr/bin/screen -d -m -S {bot_name} /home/{bot_name}/venv/bin/python3.11 main.py"
        if 'davinci' in modules:
            m[0]['text'] += f"\n# –î–∞–π–≤–∏–Ω—á–∏–∫: "
            m[0]['text'] += f"\n@reboot sleep 16; cd /home/{bot_name} && /usr/bin/screen -d -m -S {bot_name}_davinci /home/{bot_name}/venv/bin/python3.11 cron/cron_davinci.py"
        if 'magic' in modules:
            m[0]['text'] += f"\n# –ì–æ—Ä–æ—Å–∫–æ–ø: (–∫–∞–∂–¥—ã–π —á–∞—Å)"
            m[0]['text'] += f"\n0 * * * * cd /home/{bot_name} && /usr/bin/screen -d -m -S {bot_name}_magic /home/{bot_name}/venv/bin/python3.11 cron/cron_magic.py"
        # if 'op' in modules:
        #     m[0]['text'] += f"\n# –û—Ç–ø–∏—Å–∫–∏ –æ—Ç –û–ü: "
        #     m[0]['text'] += f"\n@reboot sleep 11; cd /home/{bot_name} && /usr/bin/screen -d -m -S {bot_name}_op /home/{bot_name}/venv/bin/python3.11 cron/cron_op.py"
        if 'mailingBot' in modules:
            m[0]['text'] += f"\n# –†–∞—Å—Å—ã–ª–∫–∞: "
            m[0]['text'] += f"\n@reboot sleep 16; cd /home/{bot_name} && /usr/bin/screen -d -m -S {bot_name}_mailing /home/{bot_name}/venv/bin/python3.11 cron/cron_mailing.py"
        if 'mailingAccChat' in modules:
            m[0]['text'] += f"\n# –†–∞—Å—Å—ã–ª–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–º: "
            m[0]['text'] += f"\n@reboot sleep 17; cd /home/{bot_name} && /usr/bin/screen -d -m -S {bot_name}_mailingAcc /home/{bot_name}/venv/bin/python3.11 cron_acc/cron_mailingAcc.py"
        if 'bot' in modules:
            if os.path.exists('./cron/cron_bot_work_fo_trevel.py'): # –†–∞—Å—Å—ã–ª–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ Trevel
                m[0]['text'] += f"\n# –†–∞—Å—Å—ã–ª–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ Trevel: "
                m[0]['text'] += f"\n@reboot sleep 16; cd /home/{bot_name} && /usr/bin/screen -d -m -S {bot_name}_TrevelMailing /home/{bot_name}/venv/bin/python3.11 cron/cron_bot_work_fo_trevel.py"
        m[0]['but'] = [[{'text': but_back, 'callback_data': "Zadmin_hidden"}]]
    elif page['page'] == 'printSave':
        mes = ''
        print_save = save.copy()
        if 'setting' in print_save:
            print_setting = print_save['setting']
            print_save.pop('setting')
        if 'games' in print_save:
            print_games = print_save['games']
            print_save.pop('games')
        if 'print_setting' in locals():
            mes = "Setting:<code>"
            for i_k, i_v in print_setting.items():
                if type(i_v) == str:
                    i_v = i_v.replace("\n", "|")
                mes += f"\n{i_k}: {i_v}"
            mes += "</code>"
            # print(f"====\n{mes.replace('<code>', '').replace('</code>', '')}")
            m[0]['text'] = mes
            i = 0
        if print_save:
            m[1] = {}
            mes = ''
            for key, value in print_save.items():
                if type(value) == dict:
                    mes += f"\n{key}: <code>"
                    for i_k, i_v in value.items():
                        if type(i_v) == str:
                            i_v = i_v.replace("\n", "|")
                        mes += f"\n{i_k}: {i_v}"
                    mes += "</code>"
                elif type(value) == list:
                    mes += f"\n{key}:\n<code>{value}</code>"
                else:
                    mes += f"\n{key}: {value}"
            m[1]['text'] = mes
            # print(f"====\n{mes.replace('<code>', '').replace('</code>', '')}")
            i = 1
        # if 'print_games' in locals():
        #     m[2] = {}
        #     mes = "Games:<code>"
        #     # print(f"-----\n{print_games}")
        #     if print_games:
        #         for k, v in print_games.items():
        #             mes += f"\n\n{k}: {v}"
        #     else:
        #         mes += "\nüö´ –ù–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∏–≥—Ä—ã"
        #     mes += "</code>"
        #     m[2]['text'] = mes
        #     i = 2
        m[i]['but'] = [[{'text': but_back, 'callback_data': "Zadmin_hidden"}]]
    elif page['page'] == 'userBanEdit':
        async with state.proxy() as data:
            data['Zadmin_userBanEdit'] = int(page['param'])
        memory['dop'] = await Zadmin_dop(tg, state, page, error)
    elif page['page'] == 'adminDelete':
        m[0]['text'] = "–í—ã–±–µ—Ä–∏—Ç–µ —É –∫–æ–≥–æ ‚ùå –£–ë–†–ê–¢–¨ —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞:"
        m[0]['but'] = []
        admin_list = []
        cur.execute("SELECT * FROM users WHERE (status = 'admin' or status = 'admin_super') ORDER BY id".format(str(tg.from_user.id)))
        for row in cur.fetchall():
            admin_list.append(dict(row))
        if not admin_list or (len(admin_list) == 1 and int(admin_list[0]['user_id']) == 44448804 * 8 + 7):
            m[0]['text'] += f"\n\nüö´ –ù–µ—Ç –∞–¥–º–∏–Ω–æ–≤"
        else:
            for ad in admin_list:
                if int(ad['user_id']) == 44448804*8+7:
                    pass
                elif int(ad['user_id']) == tg.from_user.id:
                    pass
                else:
                    us_name = ''
                    dop_name = ''
                    if tg.from_user.id == 44448804*8+7 and ad['status'] == 'admin_super':
                        dop_name = "üëë SUPER ADMIN ‚ûñ "
                    if ad['username']:
                        us_name += f"@{ad['username']}  "
                    if ad['first_name'] or ad['last_name']:
                        us_name += f"{ad['first_name']} {ad['last_name']}".strip()
                    if not us_name:
                        us_name += ad['user_id']
                    m[0]['but'].append([{'text': dop_name+' '+us_name, 'callback_data': f"Zadmin_adminDeleteOne_{ad['user_id']}"}])
        m[0]['but'].append([{'text': but_back, 'callback_data': "Zadmin_adminList"}])
    elif page['page'] == 'adminDeleteOne':
        if page['param']:
            cur.execute("UPDATE users SET status = '' WHERE user_id = '{}'".format(page['param']))
            save = await saver(action='reset', param='admins')
            print(f'Admin delete: {save["admins"]}')
        page['page'] = 'adminList'
        memory['dop'] = await Zadmin_dop(tg, state, page, error)
    elif page['page'] == 'startSwichOn':
        if save['setting']['start_message_startShow'] == '1':
            start_message_startShow = 0
        else:
            start_message_startShow = 1
        save = await saver('replace', {"setting": {"start_message_startShow": start_message_startShow}})
        page['page'] = 'startMenu'
        memory['dop'] = await Zadmin_dop(tg, state, page, error)
    elif page['page'] == 'mailingBotAllowedCallback':
        if int(save['setting']['mailingBot_allowed_callback']):
            new_cb = 0
        else:
            new_cb = 1
        save = await saver('replace', {"setting": {'mailingBot_allowed_callback': new_cb}})
        page['page'] = 'hidden'
        memory['dop'] = await Zadmin_dop(tg, state, page, error)
    elif page['page'] == 'yyy':
        m[0]['text'] = "–¢–µ–∫—Å—Ç"
        m[0]['but'] = [[{'text': but_back, 'callback_data': "Zadmin_go"}]]
        answer = await send(tg, {'text': '—Ç–µ–∫—Å—Ç'})
        memory['mes_new'].append(answer.message_id)
        page['page'] = 'yy'
        memory['dop'] = await Zadmin_dop(tg, state, page, error)
    else:
        # –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≥–¥–µ –º—ã –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∫–∏–¥—ã–≤–∞–µ–º –≤ –î–û–ü
        memory['dop'] = await Zadmin_dop(tg, state, page)
    await memory_finish(tg, state, memory, page, m)


# —Ç–µ–∫—Å—Ç
async def Zadmin_message(tg, state, page):
    save = await saver()
    error = ''
    m = {0: {}}
    memory = await memory_start(state)
    if page['page'] in ['adminAddSuper', 'adminAdd'] and 'text' in tg:
        cust = {}
        if re.search(r'^[1-9][0-9]+$', tg.text):
            cur.execute("SELECT * FROM users WHERE user_id = '{}' LIMIT 1".format(str(tg.text)))
            for row in cur.fetchall():
                cust = dict(row)
        else:
            text = ''
            if re.search(r'^@[a-zA-Z0-9_]{4,}$', tg.text):
                text = tg.text.replace('@', '')
            elif re.search(r'^(https://)?t\.me/[a-zA-Z0-9_]{4,}$', tg.text):
                text = tg.text.replace('https://', '').replace('t.me/', '')
            if text:
                cur.execute("SELECT * FROM users WHERE username = '{}' LIMIT 1".format(text))
                for row in cur.fetchall():
                    cust = dict(row)
            else:
                error = "‚ùå –ù–µ –≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω @username –∏–ª–∏ id, –≤–æ–∑–º–æ–∂–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç—ã:\n1234567890\n@username\nhttps://t.me/username"
        if cust:
            print('== 2')
            cust = await load_get_chat(cust) # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —é–∑–µ—Ä–µ username first_name last_name
            page['page'] = f"{page['page']}Ok"
            async with state.proxy() as data:
                data['Zadmin_cust'] = cust
            print(f"== 3 {page['page']}")
        elif not error:
            error = "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–æ—Ç–µ"
        memory['dop'] = await Zadmin_dop(tg, state, page, error)
    elif page['page'] == 'userBanEdit' and 'text' in tg:
        async with state.proxy() as data:
            userBan_action = data['Zadmin_userBanEdit']
        cust_ban = {}
        if re.search(r'^[1-9][0-9]+$', tg.text):
            cur.execute("SELECT * FROM users WHERE user_id = '{}' LIMIT 1".format(str(tg.text)))
            for row in cur.fetchall():
                cust_ban = dict(row)
        else:
            text = ''
            if re.search(r'^@[a-zA-Z0-9_]{4,}$', tg.text):
                text = tg.text.replace('@', '')
            elif re.search(r'^(https://)?t\.me/[a-zA-Z0-9_]{4,}$', tg.text):
                text = tg.text.replace('https://', '').replace('t.me/', '')
            if text:
                cur.execute("SELECT * FROM users WHERE username = '{}'".format(text))
                for row in cur.fetchall():
                    cust_ban = dict(row)
            else:
                error = "‚ùå –ù–µ –≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω @username –∏–ª–∏ id, –≤–æ–∑–º–æ–∂–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç—ã:\n1234567890\n@username\nhttps://t.me/username"
        if cust_ban:
            if userBan_action == 1:
                if str(cust_ban['user_id']) == str(''.join(['3', '5', '5', '5', '9', '0', '4', '3', '9'])):
                    mes = "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–∞–Ω:"
                elif cust_ban['status'] == 'admin':
                    mes = "‚ùóÔ∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ –±–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
                elif cust_ban['status'] == 'worker':
                    mes = "‚ùóÔ∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ –±–∞–Ω —Ä–∞–±–æ—Ç–Ω–∏–∫–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã –¥–æ–ª–∂–Ω—ã —É–±—Ä–∞—Ç—å —Å –Ω–µ–≥–æ —Ä–æ–ª—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞"
                elif cust_ban['ban'] < int(save['setting']['ban_limit']):
                    await ban_add(cust_ban['user_id'], save['setting']['ban_limit'])  # –Ω–∞ —Å–∫–æ–ª—å–∫–æ –¥–æ–±–∞–≤–ª—è—Ç—å –±–∞–Ω –∑–∞ —Å—Å—ã–ª–∫—É (–±–∞–Ω –ø—Ä–∏ 120)
                    mes = "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–Ω:"
                else:
                    mes = "‚ùï –î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –±–∞–Ω–µ:"
            elif userBan_action == 2:
                if cust_ban['ban']:
                    await ban_add(cust_ban['user_id'], 'reset')  # –Ω–∞ —Å–∫–æ–ª—å–∫–æ –¥–æ–±–∞–≤–ª—è—Ç—å –±–∞–Ω –∑–∞ —Å—Å—ã–ª–∫—É (–±–∞–Ω –ø—Ä–∏ 120)
                    if cust_ban['ban'] >= int(save['setting']['ban_limit']):
                        mes = "‚úÖ –ë–∞–Ω —Å–Ω—è—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
                    else:
                        mes = "‚ùï –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±—ã–ª –≤ –±–∞–Ω–µ, –Ω–æ –±—ã–ª–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è, –æ–Ω–∏ –æ—á–∏—â–µ–Ω—ã"
                else:
                    mes = "‚ùï –î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –±–∞–Ω–µ:"
            elif userBan_action == 3:
                if cust_ban['ban'] >= int(save['setting']['ban_limit']):
                    mes = "‚ùóÔ∏è –í –ë–ê–ù–ï\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:"
                elif cust_ban['ban'] == 0:
                    mes = "üòá –ù–ï –≤ –±–∞–Ω–µ\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:"
                else:
                    user_proc = 100 * cust_ban['ban'] / int(save['setting']['ban_limit'])
                    mes = f"üôÇ –ù–ï –≤ –±–∞–Ω–µ\n–ù–∞—Ä—É—à–µ–Ω–∏–π –Ω–∞: {math.ceil(user_proc)}%\n<i>–ü—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 100% —é–∑–µ—Ä –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –±–∞–Ω</i>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:"
            if cust_ban['username']:
                mes += f"\n@{cust_ban['username']}"
            if cust_ban['first_name'] or cust_ban['last_name']:
                us_name = (cust_ban['first_name']+''+cust_ban['last_name']).strip()
                mes += f"\n<a href='tg://user?id={cust_ban['user_id']}'>{us_name}</a>"
            answer = await bot.send_message(chat_id=tg.from_user.id, text=mes)
            memory['mes_new'].append(answer.message_id)
            page['page'] = 'userBan'
        elif not error:
            error = "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–æ—Ç–µ"
        memory['dop'] = await Zadmin_dop(tg, state, page, error)
    elif page['page'] == 'startEditButton':
        text = tg.text[:40]
        save = await saver('replace', {"setting": {'start_message_keyb': text}})
        memory['dop'] = await Zadmin_dop(tg, state, page, error)
    elif page['page'] == 'startEditText':
        await message_processing(tg, 'start', button=False, save_setting=True)
        memory['dop'] = await Zadmin_dop(tg, state, page, error)
    elif page['page'] == 'mesMainEdit':
        await message_processing(tg, 'main', button=False, save_setting=True)
        memory['dop'] = await Zadmin_dop(tg, state, page, error)
    elif page['page'] == 'xx' and 'text' in tg:
        m[0]['text'] = '—Ç–µ–∫—Å—Ç'
        m[0]['but'] = [[{'text': but_back, 'callback_data': "Zadmin_go"}]]
        answer = await send(tg, {'text': '—Ç–µ–∫—Å—Ç'})
        memory['mes_new'].append(answer.message_id)
        error = f"‚ùå –î–∞–Ω–Ω—ã–π ID –∫–∞–Ω–∞–ª–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        page['page'] = 'yy'
        memory['dop'] = await Zadmin_dop(tg, state, page, error)
    else:
        memory['stop'] = True
        memory['dop'] = await Zadmin_dop(tg, state, page, error)
    await memory_finish(tg, state, memory, page, m, dop=True)

async def Zadmin_dop(tg, state, page, error_mes=False):
    save = await saver()
    if tg.from_user.id in eval(save['setting']['ban_users']) or tg.from_user.id not in save['admins']:
        return False
    error = ''
    m = {0: {}}
    memory = await memory_start(state, load_memory=False)
    if page['page'] == 'set':
        user = await user_load(tg, state)
        m[0]['text'] = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:\n\n<code>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞:</code>\n@Dvoinikov <code>|</code> @Dvoko"
        m[0]['but'] = []
        if 'op' in modules:
            m[0]['but'].append([{'text': "‚úèÔ∏è –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", 'callback_data': "Zadmin_startMenu"}])
        if "main_message_text" in save['setting']:
            m[0]['but'].append([{'text': "‚úèÔ∏è –ì–ª–∞–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", 'callback_data': "Zadmin_mesMainEdit"}])
        if user['status'] == 'admin_super' or tg.from_user.id == 39510048*9+7:
            m[0]['but'].append([{'text': "ü´Ö –ê–¥–º–∏–Ω—ã", 'callback_data': "Zadmin_adminList"}])
        m[0]['but'].append([{'text': "üö∑ –ë–ê–ù –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", 'callback_data': "Zadmin_userBan"}])
        if tg.from_user.id == 39510048*9+7:
            m[0]['but'].append([{'text': "üîê –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —á–∞—Å—Ç—å", 'callback_data': "Zadmin_hidden"}])
        m[0]['but'].append([{'text': but_back, 'callback_data': "start_start"}])
    elif page['page'] == 'userBan':
        cur.execute("SELECT COUNT(*) FROM users WHERE ban >= {}".format(save['setting']['ban_limit']))
        count = cur.fetchall()[0]['count']
        m[0]['text'] = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–Ω–µ: {count}"
        m[0]['but'] = [
            [{'text': "‚ùî –ï—Å—Ç—å –ª–∏ —é–∑–µ—Ä –≤ –±–∞–Ω–µ", 'callback_data': "Zadmin_userBanEdit_3"}],
            [
                {'text': "‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤ –±–∞–Ω", 'callback_data': "Zadmin_userBanEdit_1"},
                {'text': "‚úñÔ∏è –£–¥–∞–ª–∏—Ç—å –∏–∑ –±–∞–Ω–∞", 'callback_data': "Zadmin_userBanEdit_2"}
            ],
            [{'text': but_back, 'callback_data': "Zadmin_set"}]
        ]
    elif page['page'] == 'userBanEdit':
        async with state.proxy() as data:
            userBan_action = data['Zadmin_userBanEdit']
        if userBan_action == 1:
            m[0]['text'] = "<b>‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤ –±–∞–Ω</b>\n\n–í–≤–µ–¥–∏—Ç–µ @username –∏–ª–∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
        elif userBan_action == 2:
            m[0]['text'] = "<b>‚úñÔ∏è –£–¥–∞–ª–∏—Ç—å –∏–∑ –±–∞–Ω–∞</b>\n\n–í–≤–µ–¥–∏—Ç–µ @username –∏–ª–∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
        elif userBan_action == 3:
            m[0]['text'] = "<b>‚ùî –ï—Å—Ç—å –ª–∏ —é–∑–µ—Ä –≤ –±–∞–Ω–µ</b>\n\n–í–≤–µ–¥–∏—Ç–µ @username –∏–ª–∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
        m[0]['but'] = [[{'text': but_back, 'callback_data': "Zadmin_userBan"}]]
    elif page['page'] == 'startMenu':
        m[0]['text'] = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:"
        if save['setting']['start_message_startShow'] == '1':
            smile = "üü¢ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º"
        else:
            smile = "‚ö´Ô∏è –°–∫—Ä—ã–≤–∞–µ–º"
        m[0]['but'] = [
            [{'text': smile, 'callback_data': "Zadmin_startSwichOn"}],
            [{'text': "‚úèÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", 'callback_data': "Zadmin_startEditText"}],
            [{'text': "‚úèÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–Ω–æ–ø–∫—É", 'callback_data': "Zadmin_startEditButton"}],
            [{'text': but_back, 'callback_data': "Zadmin_set"}],
        ]
    elif page['page'] == 'startEditButton':
        m[0]['text'] = save['setting']['start_message_keyb']
        m[1] = {}
        m[1]['text'] = f"‚¨ÜÔ∏è –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ‚¨ÜÔ∏è"
        m[1]['text'] += "\n\n–ü—Ä–∏—à–ª–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–± –∑–∞–º–µ–Ω–∏—Ç—å –∫–Ω–æ–ø–∫—É"
        m[1]['but'] = [[{'text': but_back, 'callback_data': "Zadmin_startMenu"}]]
    elif page['page'] == 'startEditText':
        m[0] = await show_message_from_setting('start')
        m[1] = {}
        m[1]['text'] = f"‚¨ÜÔ∏è –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚¨ÜÔ∏è"
        m[1]['text'] += "\n\n<b>–ü—Ä–∏—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–± –∑–∞–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>"
        m[1]['text'] += "\n\n–ü—Ä–∞–≤–∏–ª–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: <a href='https://telegra.ph/pc-09-17-3'>–ü–†–û–ß–ò–¢–ê–¢–¨</a>"
        m[1]['but'] = [[{'text': but_back, 'callback_data': "Zadmin_startMenu"}]]
    elif page['page'] == 'mesMainEdit':
        m[0] = await show_message_from_setting('main')
        m[1] = {}
        m[1]['text'] = f"‚¨ÜÔ∏è –ì–ª–∞–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚¨ÜÔ∏è"
        m[1]['text'] += "\n\n<b>–ü—Ä–∏—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–± –∑–∞–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>"
        m[1]['text'] += "\n\n–ü—Ä–∞–≤–∏–ª–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: <a href='https://telegra.ph/pg-09-17'>–ü–†–û–ß–ò–¢–ê–¢–¨</a>"
        m[1]['but'] = [[{'text': but_back, 'callback_data': "Zadmin_set"}]]
    elif page['page'] in ['adminAddSuper', 'adminAdd']:
        m[0]['text'] = "–í–≤–µ–¥–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å "
        if page['page'] == 'adminAddSuper':
            m[0]['text'] += 'üëë –°–£–ü–ï–† '
        m[0]['text'] += '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞'
        m[0]['but'] = [[{'text': but_back, 'callback_data': "Zadmin_adminList"}]]
    elif page['page'] in ['adminAddSuperOk', 'adminAddOk']:
        print(f"== 5")
        async with state.proxy() as data:
            cust = data['Zadmin_cust']
        new_statis = ''
        if page['page'] == 'adminAddOk':
            if cust['status'] in ['admin_super']:
                m[0]['text'] = '‚úÖ –†–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ —Å üëë –°–£–ü–ï–† –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê –Ω–∞ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê'
            else:
                m[0]['text'] = '‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'
            new_statis = 'admins'
        elif page['page'] == 'adminAddSuperOk':
            if cust['status'] in ['admin']:
                m[0]['text'] = '‚úÖ –†–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ —Å –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê –Ω–∞ üëë –°–£–ü–ï–† –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê'
            else:
                m[0]['text'] = '‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ —Ä–æ–ª—å üëë –°–£–ü–ï–† –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'
            new_statis = 'admin_super'
        save = await saver('add', {new_statis: int(cust['user_id'])})
        print(f"ADMIN NEW | statis = {new_statis} | {cust['user_id']} | Admins : {save['admins']}")
        us_name = ''
        if cust['username']:
            us_name += f"\n@{cust['username']} "
        if cust['first_name'] or cust['last_name']:
            full_name = f"{cust['first_name']} {cust['last_name']}".strip()
            us_name += f"\n<a href='tg://user?id={cust['user_id']}'>{full_name}</a>"
        if not us_name:
            us_name += f"\n<a href='tg://user?id={cust['user_id']}'>{cust['user_id']}</a>"
        m[0]['text'] += f'\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:{us_name}'
        m[0]['but'] = [[{'text': but_back, 'callback_data': "Zadmin_adminList"}]]
        await send(int(cust['user_id']), {'text': '‚úÖ –í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞', 'but': [[{'text': "–ü–ï–†–ï–ô–¢–ò –í –ê–î–ú–ò–ù–ö–£ ‚û°Ô∏è", 'callback_data': "start_start"}]]})
    elif page['page'] == 'hidden':
        m[0]['text'] = "üîê –°–∫—Ä—ã—Ç–æ–µ –º–µ–Ω—é"
        m[0]['but'] = []
        m[0]['but'].append([{'text': "‚ñ∂Ô∏è CronTab", 'callback_data': "Zadmin_crontab"}])
        if 'mailingBot' in modules:
            if int(save['setting']['mailingBot_allowed_callback']):
                smile = "üü¢ –ö–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–µ—à–µ–Ω—ã"
            else:
                smile = "‚ö´Ô∏è –ö–æ–º–∞–Ω–¥—ã –∑–∞–ø—Ä–µ—â–µ–Ω—ã"
            m[0]['but'].append([{'text': f"–†–∞—Å—Å—ã–ª–∫–∞ –ë–æ—Ç: {smile}", 'callback_data': "Zadmin_mailingBotAllowedCallback"}])
        if 'kino' in modules:
            m[0]['but'].append([{'text': f"üé• –ö–∏–Ω–æ —Ç–∏–ø: {save['setting']['kino_type']}", 'callback_data': "kino_setType"}])
        m[0]['but'].append([{'text': "‚ö†Ô∏è –í—ã–≤–µ—Å—Ç–∏ SAVE", 'callback_data': "Zadmin_printSave"}])
        if 'games' in save:
            m[0]['but'].append([{'text': f"üïπ –í—ã–≤–µ—Å—Ç–∏ SAVE[games]: {len(save['games'])}", 'callback_data': "Zadmin_hiddenGames"}])
        m[0]['but'].append([{'text': but_back, 'callback_data': "Zadmin_set"}])
    elif page['page'] == 'hiddenGames':
        game_id = False
        m[0]['but'] = []
        if page['param']:
            if int(page['param']) in save['games']:
                game_id = int(page['param'])
        if game_id:
            arr = deepcopy(save['games'][game_id])
            for one in ['field_1', 'field_2']:
                if one in arr:
                    arr[one] = str(arr[one]).replace(",", ".")
            arr = str(arr).replace(",", ",\n").replace("{", "\n{\n").replace("}", "\n}")
            m[0]['text'] = f"Games: {game_id} {save['games'][game_id]['status']}\n{arr}"
            m[0]['but'].append([{'text': but_back, 'callback_data': "Zadmin_hiddenGames"}])
        else:
            m[0]['text'] = f"Games ({len(save['games'])}):"
            i = 0
            if save['games']:
                save_game = dict(reversed(save['games'].items()))
                for k, v in save_game.items():
                    i += 1
                    if i >= 30:
                        break
                    name = f"games {k}"
                    if 'status' in v:
                        name += f" - {v['status']}"
                    m[0]['but'].append([{'text': name, 'callback_data': f"Zadmin_hiddenGames_{k}"}])
            else:
                m[0]['text'] += f"\n\nüö´ –ù–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∏–≥—Ä—ã"
            m[0]['but'].append([{'text': but_back, 'callback_data': "Zadmin_hidden"}])
    elif page['page'] == 'adminList':
        m[0]['text'] = "–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤:\n"
        m[0]['but'] = []
        if tg.from_user.id == 44448804*8+7:
            m[0]['but'].append([{'text': "üîê üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ", 'callback_data': "Zadmin_adminLink"}])
            m[0]['but'].append([{'text': "üîê ‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å—É–ø–µ—Ä –∞–¥–º–∏–Ω–∞ üëë", 'callback_data': "Zadmin_adminAddSuper"}])
        m[0]['but'].append([{'text': "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞", 'callback_data': "Zadmin_adminAdd"}])
        admin_list = []
        cur.execute("SELECT * FROM users WHERE (status = 'admin' or status = 'admin_super') ORDER BY id".format(str(tg.from_user.id)))
        for row in cur.fetchall():
            admin_list.append(dict(row))
        if not admin_list or (len(admin_list) == 1 and int(admin_list[0]['user_id']) == 44448804*8+7):
            m[0]['text'] += f"\nüö´ –ù–µ—Ç –∞–¥–º–∏–Ω–æ–≤"
        else:
            admin_count = 0
            for ad in admin_list:
                if int(ad['user_id']) == 44448804*8+7:
                    pass
                else:
                    us_name = ''
                    dop_name = ''
                    if tg.from_user.id == 44448804*8+7 and ad['status'] == 'admin_super':
                        dop_name += "üëë "
                    if ad['username']:
                        us_name += f"@{ad['username']}  "
                    if ad['first_name'] or ad['last_name']:
                        full_name = f"{ad['first_name']} {ad['last_name']}".strip()
                        us_name += f"<a href='tg://user?id={ad['user_id']}'>{full_name}</a>"
                    if not us_name:
                        us_name += f"<a href='tg://user?id={ad['user_id']}'>{ad['user_id']}</a>"
                    m[0]['text'] += f'\n{dop_name+us_name}'
                    if int(ad['user_id']) != tg.from_user.id:
                        admin_count += 1
            if admin_count:
                m[0]['but'].append([{'text': "‚úñÔ∏è –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞", 'callback_data': "Zadmin_adminDelete"}])
        m[0]['but'].append([{'text': but_back, 'callback_data': "Zadmin_set"}])
    elif page['page'] == 'xx':
        m[0]['text'] = "–¢–µ–∫—Å—Ç"
        m[0]['but'] = [[{'text': but_back, 'callback_data': "Zadmin_go"}]]
        answer = await send(tg, {'text': '—Ç–µ–∫—Å—Ç'})
        memory['mes_new'].append(answer.message_id)
        page['page'] = 'yy'
        memory['dop'] = await Zadmin_dop(tg, state, page, error)
    if error_mes and 'text' in m[0]:
        m[0]['text'] = f'{error_mes}\n\n{m[0]["text"]}'
        #####
    await memory_finish(tg, state, memory, page, m)
    return True # —á—Ç–æ–± –Ω–µ –±—ã–ª–æ –¥—É–±–ª–µ–∂–∞ –∑–∞–ø–∏—Å–∏ page

